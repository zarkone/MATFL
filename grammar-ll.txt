<прг>                   → void <id>()<блок><прг> |
                          int <сп. пер или main><прг> |
                          __int64 <список переменных><прг> | ε
                          
<сп. пер. или main>     → main()<блок> | <список переменных>;
<список переменных>		→ <элемент списка><хв.сп>

        <хв.сп>         → , <список переменных> | ε
        
<элемент списка>		→ <id><возможное присваивание или массив> 
   <возм. присваивание 
   или массив>          → <возможное присваивание> | <длина массива><возможная инициализация массива>
   
<длина массива>			→ [<целая константа>]
<возможная 
инициализация массива> 	→ = {<список констант>} | ε
<список констант>		→ <целая константа> | <хв.кон>
        <хв.кон>        → , <список констант> | ε
<возможное 
присваивание>			→ = <выражение> | ε
<блок>					→ {<операторы>}
<операторы>				→ <оператор><операторы> | ε
<оператор>				→ <выражение>;|<for>|<блок>|int <список переменных>|__int64 <список переменных>|<вызов функции>;|;


<выражение> →  <A1>
               <A1>	→ <A2><A1-H>
             <A1-H> → = <A1> | ε
               <A2>	→ <A5><A2-H>
             <A2-H> → && <A5> | || <A5> | ε
               <A5>	→ <A6><A5-H>
             <A5-H> → * <A6> | / <A6> | % <A6> | ε
              <A6>	→ (<A1>) | <id><возм. инд> | <целая константа>
              
<возм. инд>         → [<выражение>] | ε
<вызов функции> 	→ <id>()

<for>	→ for (<выражение>; <выражение> ; <выражение>)<оператор>


------------------------
- Лексика
------------------------

<целая константа>	→ <DEC константа> | <HEX константа> | 0
<DEC константа>		→ <DEC константа><цифра> | <цифра>
<цифра>			→ 0|...|9
<HEX константа>		→ 0x<HEX цифры>
<HEX цифры>		→ <HEX цифры><HEX цифра> | <HEX цифра> 
<HEX цифра>		→ 0|...|9|A|...|F

<id>			→ <буква><символы>
<буква>			→ a|...|Z
<символы>		→ <символы><буква> | <символы><цифра> | ε

+ - * / % [ ] ( ) { } > < >= <= == != ! && || = void int __int64 main for ; , 


------------------------

<пробел> \t \n
<комментарий> → // <символы>\n | // <символы>EOF
